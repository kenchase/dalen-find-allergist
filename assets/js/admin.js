/**
 * Admin JavaScript for Find an Allergist plugin
 */

(function ($) {
  'use strict';

  var FAAFindAllergistAdmin = {
    /**
     * Initialize all admin functionality
     */
    init: function () {
      this.initSettings();
      this.initNotifications();
    },

    /**
     * Initialize settings page functionality
     */
    initSettings: function () {
      // Settings validation
      this.validateSettings();

      // API key testing
      this.initApiKeyTesting();

      // Reset settings functionality
      this.initResetSettings();
    },

    /**
     * Validate settings before saving
     */
    validateSettings: function () {
      $('form').on('submit', function (e) {
        var isValid = true;
        var errors = [];

        // Validate Google Maps API key format
        var apiKey = $('#google_maps_api_key').val();
        if (apiKey && !apiKey.match(/^AIza[0-9A-Za-z-_]{35}$/)) {
          isValid = false;
          errors.push(faaAdmin.strings.invalidApiKey || 'Google Maps API key format appears to be invalid.');
        }

        if (!isValid) {
          e.preventDefault();
          alert('Please fix the following errors:\n\n' + errors.join('\n'));
        }
      });
    },

    /**
     * Initialize API key testing functionality
     */
    initApiKeyTesting: function () {
      // Use existing test button generated by PHP
      $('#faa-test-api-key').on('click', function () {
        var apiKey = $('#google_maps_api_key').val();
        if (!apiKey) {
          alert(faaAdmin.strings.apiKeyRequired);
          return;
        }

        $(this).prop('disabled', true).text(faaAdmin.strings.testing);

        // Test the API key by making a simple geocoding request
        FAAFindAllergistAdmin.testGoogleMapsApiKey(apiKey, $(this));
      });
    },

    /**
     * Initialize reset settings functionality
     */
    initResetSettings: function () {
      $('#faa-reset-settings').on('click', function () {
        if (confirm(faaAdmin.strings.confirmReset)) {
          var button = $(this);
          button.prop('disabled', true).text(faaAdmin.strings.resetting);

          // Get nonce value from localized script data
          var nonce = faaAdmin.nonce;

          $.ajax({
            url: faaAdmin.ajaxurl,
            type: 'POST',
            data: {
              action: 'faa_reset_settings',
              nonce: nonce,
            },
            success: function (response) {
              if (response.success) {
                alert(faaAdmin.strings.resetSuccess);
                location.reload();
              } else {
                alert('Error: ' + response.data);
                button.prop('disabled', false).text('Reset to Defaults');
              }
            },
            error: function () {
              alert(faaAdmin.strings.resetError);
              button.prop('disabled', false).text('Reset to Defaults');
            },
          });
        }
      });
    },

    /**
     * Test Google Maps API key
     */
    testGoogleMapsApiKey: function (apiKey, button) {
      var testUrl = 'https://maps.googleapis.com/maps/api/geocode/json?address=Toronto,ON&key=' + apiKey;

      $.ajax({
        url: testUrl,
        method: 'GET',
        timeout: 10000,
      })
        .done(function (response) {
          if (response.status === 'OK') {
            button.removeClass('button-secondary').addClass('button-primary').text(faaAdmin.strings.apiKeyValid);
            setTimeout(function () {
              button.removeClass('button-primary').addClass('button-secondary').text(faaAdmin.strings.testApiKey).prop('disabled', false);
            }, 3000);
          } else {
            button.text(faaAdmin.strings.apiKeyInvalid).css('color', '#dc3232');
            setTimeout(function () {
              button.text(faaAdmin.strings.testApiKey).css('color', '').prop('disabled', false);
            }, 3000);
            console.error('API Key test failed:', response.status, response.error_message);
          }
        })
        .fail(function (xhr, status, error) {
          button.text(faaAdmin.strings.testFailed).css('color', '#dc3232');
          setTimeout(function () {
            button.text(faaAdmin.strings.testApiKey).css('color', '').prop('disabled', false);
          }, 3000);
          console.error('API Key test failed:', status, error);
        });
    },

    /**
     * Initialize notification system
     */
    initNotifications: function () {
      // Auto-hide success messages
      $('.notice.is-dismissible').each(function () {
        var notice = $(this);
        setTimeout(function () {
          notice.fadeOut();
        }, 5000);
      });
    },

    /**
     * Utility function to show admin notices
     */
    showNotice: function (message, type) {
      type = type || 'info';
      var noticeHtml = '<div class="notice notice-' + type + ' is-dismissible"><p>' + message + '</p></div>';
      $('.wrap h1').after(noticeHtml);
    },

    /**
     * Utility function for AJAX error handling
     */
    handleAjaxError: function (xhr, status, error) {
      console.error('AJAX Error:', status, error);
      this.showNotice('An error occurred. Please try again.', 'error');
    },
  };

  // Global utility functions
  window.FAAFindAllergistAdmin = FAAFindAllergistAdmin;

  // Initialize when document is ready
  $(document).ready(function () {
    FAAFindAllergistAdmin.init();
  });
})(jQuery);
